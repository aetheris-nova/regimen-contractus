name: "Pull Request Checks"

on:
  pull_request:

jobs:
  changed_files:
    name: "Changed Files"
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      arbiter: ${{ steps.filter.outputs.arbiter }}
      codex_aetherium: ${{ steps.filter.outputs.codex_aetherium }}
      sigillum_ordo_administratorum: ${{ steps.filter.outputs.sigillum_ordo_administratorum }}
      sigillum: ${{ steps.filter.outputs.sigillum }}
      types: ${{ steps.filter.outputs.types }}
    steps:
      - name: "ðŸ“¥ Filter"
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            arbiter:
              - 'packages/arbiter/**'
            codex_aetherium:
              - 'packages/codex-aetherium/**'
            sigillum:
              - 'packages/sigillum/**'
            sigillum_ordo_administratorum:
              - 'packages/sigillum-ordo-administratorum/**'
            types:
              - 'packages/types/**'

  validate_pr_title:
    name: "Validate PR Title"
    runs-on: ubuntu-latest
    steps:
      - name: "ðŸ›Ž Checkout"
        uses: actions/checkout@v4
      - name: "ðŸ”§ Setup"
        uses: ./.github/actions/use-pnpm-dependencies
      - name: "ðŸ“¥ Get PR Title"
        id: get_pr_title
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            const { data } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });
            return data.title;
      - name: "âœ… Validate"
        run: echo "${{ steps.get_pr_title.outputs.result }}" | npx commitlint

  ##
  # package specific
  ##

  lint_build_test_arbiter:
    name: "Lint, Build & Test - @aetherisnova/arbiter"
    needs: [changed_files, validate_pr_title]
    if: ${{ needs.changed_files.outputs.arbiter == 'true' }}
    uses: ./.github/workflows/lint_build_test.yml
    with:
      package_dir: "arbiter"
      package_name: "@aetherisnova/arbiter"
      with_foundry: true

  lint_build_test_codex_aetherium:
    name: "Lint, Build & Test - @aetherisnova/codex-aetherium"
    needs: [changed_files, validate_pr_title]
    if: ${{ needs.changed_files.outputs.codex_aetherium == 'true' }}
    uses: ./.github/workflows/lint_build_test.yml
    with:
      package_dir: "codex-aetherium"
      package_name: "@aetherisnova/codex-aetherium"

  lint_build_test_sigillum:
    name: "Lint, Build & Test - @aetherisnova/sigillum"
    needs: [changed_files, validate_pr_title]
    if: ${{ needs.changed_files.outputs.sigillum == 'true' }}
    uses: ./.github/workflows/lint_build_test.yml
    with:
      package_dir: "sigillum"
      package_name: "@aetherisnova/sigillum"
      with_foundry: true

  lint_build_test_sigillum_ordo_administratorum:
    name: "Lint, Build & Test - @aetherisnova/sigillum-ordo-administratorum"
    needs: [changed_files, validate_pr_title]
    if: ${{ needs.changed_files.outputs.sigillum_ordo_administratorum == 'true' }}
    uses: ./.github/workflows/lint_build_test.yml
    with:
      package_dir: "sigillum-ordo-administratorum"
      package_name: "@aetherisnova/sigillum-ordo-administratorum"
      with_foundry: true

  lint_build_test_types:
    name: "Lint, Build & Test - @aetherisnova/regimen-contractus-types"
    needs: [changed_files, validate_pr_title]
    if: ${{ needs.changed_files.outputs.types == 'true' }}
    uses: ./.github/workflows/lint_build_test.yml
    with:
      package_dir: "types"
      package_name: "@aetherisnova/regimen-contractus-types"
